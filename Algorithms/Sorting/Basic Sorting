package algorithm.sorting;
import java.util.*;

public class sorting {
    public static void main(String[] args) {

         // BUBBLE SORT
        int arr1[] = {3,60,35,2,45,320,5};
        int bubbleSort[] = bubbleSort(arr1);
        System.out.println(Arrays.toString(bubbleSort));

        //SELECTION SORT
        int arr2[] = {11, 88, 44, 99, 55};
        int selectionSort[] = selectionSort(arr2);
        System.out.println(Arrays.toString(selectionSort));

        int arr3[] = {14, 9, 15, 12, 6, 8 , 13};
        int insertionSort[] = insertionSort(arr3);
        System.out.println(Arrays.toString(insertionSort));

    }


    //BUBBLE SORT   -> compare and swap

    private static int[] bubbleSort(int[] arr) {
        int n = arr.length;

        for(int counter = 0; counter < n-1; counter++){
            for(int j = 0; j < n-1-counter; j++){
                if (arr[j] > arr[j + 1]) {
                    int temp = arr[j];
                    arr[j] = arr[j + 1];
                    arr[j + 1] = temp;
                }
            }
        }
        return arr;
    }

    //SELECTION SORT -> select the min and then swap

    private static int[] selectionSort(int[] arr) {
        int n = arr.length;

        for(int counter = 0; counter < n-1; counter++){
            int min = counter;
            for(int i = counter+1; i <= n-1; i++){
                if(arr[i] < arr[min]){
                    min = i;
                }
            }
            int temp = arr[min];
            arr[min] = arr[counter];
            arr[counter] = temp;
        }

        return arr;
    }


    //INSERSTION SORT
    private static int[] insertionSort(int[] arr) {
        int n = arr.length;

        for(int i = 0; i < n; i++){
            int j = i;
            while(j > 0 && arr[j-1] > arr[j]){
                int temp = arr[j-1];
                arr[j-1] = arr[j];
                arr[j] = temp;
                j--;
            }

        }
        return arr;
    }

}
